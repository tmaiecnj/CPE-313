{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyO9PpA1sNJncQBtHgnAeBsu",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/tmaiecnj/CPE-313/blob/main/Hands-on%20Activity%207.1%20-%20Deep%20Learning%20in%20Time%20Series\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Github Link: [Hands-on Activity 7.1: Deep Learning in Time Series](https://github.com/tmaiecnj/CPE-313/blob/main/Hands-on%20Activity%207.1%20-%20Deep%20Learning%20in%20Time%20Series.ipynb)"
      ],
      "metadata": {
        "id": "B5YG4P0IO75_"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Activity 4.4 Deep Learning in Time Series"
      ],
      "metadata": {
        "id": "p5ztWxyfPOXw"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Objective(s):\n",
        "This activity aims to introduce how to build and train a simple RNN or LSTM for time series forecasting, using Keras."
      ],
      "metadata": {
        "id": "b6_8HymXPRuf"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Intended Learning Outcomes (ILOs):\n",
        "* Demonstrate how to build and train RNN for time series forecasting\n",
        "* Demonstrate how to build and train LSTM for time series forecasting"
      ],
      "metadata": {
        "id": "eMyQ3CdRPRr0"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Resources:\n",
        "* Jupyter Notebook\n",
        "* Beijing.csv"
      ],
      "metadata": {
        "id": "OBAL_oYEPRof"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Procedures"
      ],
      "metadata": {
        "id": "Q4cIsQMZPy8E"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Load the necessary libraries"
      ],
      "metadata": {
        "id": "8uOzRjQmP4F1"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "5_UiLIvwO65-"
      },
      "outputs": [],
      "source": [
        "%matplotlib inline\n",
        "\n",
        "import sys\n",
        "import numpy as np\n",
        "import matplotlib\n",
        "import matplotlib.pyplot as plt\n",
        "plt.style.use('fivethirtyeight')\n",
        "import pandas as pd\n",
        "\n",
        "import keras\n",
        "from keras.models import Sequential\n",
        "from keras.layers import Dense, SimpleRNN, LSTM"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Build a recurrent neural network and train it to forecast a single time series.\n",
        "* Load and setup the dataset"
      ],
      "metadata": {
        "id": "QfWIPcDPQGmt"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df_Beijing = pd.read_csv('Beijing-1.csv')\n",
        "df_Beijing = df_Beijing[df_Beijing.year >= 2015]\n",
        "df_Beijing.head(10)"
      ],
      "metadata": {
        "id": "rixJ5NleQGdb",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 380
        },
        "outputId": "22d0c797-265e-46b2-b960-4b7501458129"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          No  year  month  day  hour  season  PM_Dongsi  PM_Dongsihuan  \\\n",
              "43824  43825  2015      1    1     0       4        5.0           32.0   \n",
              "43825  43826  2015      1    1     1       4        4.0           12.0   \n",
              "43826  43827  2015      1    1     2       4        3.0           19.0   \n",
              "43827  43828  2015      1    1     3       4        4.0            9.0   \n",
              "43828  43829  2015      1    1     4       4        3.0           11.0   \n",
              "43829  43830  2015      1    1     5       4        3.0           18.0   \n",
              "43830  43831  2015      1    1     6       4        3.0           20.0   \n",
              "43831  43832  2015      1    1     7       4        3.0           22.0   \n",
              "43832  43833  2015      1    1     8       4        NaN            NaN   \n",
              "43833  43834  2015      1    1     9       4        5.0           37.0   \n",
              "\n",
              "       PM_Nongzhanguan  PM_US Post  DEWP  HUMI    PRES  TEMP cbwd    Iws  \\\n",
              "43824              8.0        22.0 -21.0  29.0  1034.0  -6.0   SE   0.89   \n",
              "43825              7.0         9.0 -22.0  23.0  1034.0  -4.0   NW   4.92   \n",
              "43826              7.0         9.0 -21.0  27.0  1034.0  -5.0   NW   8.94   \n",
              "43827             11.0        13.0 -21.0  29.0  1035.0  -6.0   NW  12.96   \n",
              "43828              5.0        10.0 -21.0  27.0  1034.0  -5.0   NW  16.98   \n",
              "43829              3.0         6.0 -22.0  23.0  1034.0  -4.0   NW  24.13   \n",
              "43830              6.0         8.0 -23.0  22.0  1034.0  -5.0   NW  25.92   \n",
              "43831              7.0        17.0 -22.0  26.0  1035.0  -6.0   SE   1.79   \n",
              "43832              NaN        11.0 -22.0  29.0  1035.0  -7.0   cv   0.89   \n",
              "43833             11.0        33.0 -22.0  24.0  1035.0  -5.0   NE   1.79   \n",
              "\n",
              "       precipitation  Iprec  \n",
              "43824            0.0    0.0  \n",
              "43825            0.0    0.0  \n",
              "43826            0.0    0.0  \n",
              "43827            0.0    0.0  \n",
              "43828            0.0    0.0  \n",
              "43829            0.0    0.0  \n",
              "43830            0.0    0.0  \n",
              "43831            0.0    0.0  \n",
              "43832            0.0    0.0  \n",
              "43833            0.0    0.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ade50529-4a4c-467d-a8b4-2655b083b1ca\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>No</th>\n",
              "      <th>year</th>\n",
              "      <th>month</th>\n",
              "      <th>day</th>\n",
              "      <th>hour</th>\n",
              "      <th>season</th>\n",
              "      <th>PM_Dongsi</th>\n",
              "      <th>PM_Dongsihuan</th>\n",
              "      <th>PM_Nongzhanguan</th>\n",
              "      <th>PM_US Post</th>\n",
              "      <th>DEWP</th>\n",
              "      <th>HUMI</th>\n",
              "      <th>PRES</th>\n",
              "      <th>TEMP</th>\n",
              "      <th>cbwd</th>\n",
              "      <th>Iws</th>\n",
              "      <th>precipitation</th>\n",
              "      <th>Iprec</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>43824</th>\n",
              "      <td>43825</td>\n",
              "      <td>2015</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>5.0</td>\n",
              "      <td>32.0</td>\n",
              "      <td>8.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>-21.0</td>\n",
              "      <td>29.0</td>\n",
              "      <td>1034.0</td>\n",
              "      <td>-6.0</td>\n",
              "      <td>SE</td>\n",
              "      <td>0.89</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43825</th>\n",
              "      <td>43826</td>\n",
              "      <td>2015</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>4.0</td>\n",
              "      <td>12.0</td>\n",
              "      <td>7.0</td>\n",
              "      <td>9.0</td>\n",
              "      <td>-22.0</td>\n",
              "      <td>23.0</td>\n",
              "      <td>1034.0</td>\n",
              "      <td>-4.0</td>\n",
              "      <td>NW</td>\n",
              "      <td>4.92</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43826</th>\n",
              "      <td>43827</td>\n",
              "      <td>2015</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>3.0</td>\n",
              "      <td>19.0</td>\n",
              "      <td>7.0</td>\n",
              "      <td>9.0</td>\n",
              "      <td>-21.0</td>\n",
              "      <td>27.0</td>\n",
              "      <td>1034.0</td>\n",
              "      <td>-5.0</td>\n",
              "      <td>NW</td>\n",
              "      <td>8.94</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43827</th>\n",
              "      <td>43828</td>\n",
              "      <td>2015</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>4.0</td>\n",
              "      <td>9.0</td>\n",
              "      <td>11.0</td>\n",
              "      <td>13.0</td>\n",
              "      <td>-21.0</td>\n",
              "      <td>29.0</td>\n",
              "      <td>1035.0</td>\n",
              "      <td>-6.0</td>\n",
              "      <td>NW</td>\n",
              "      <td>12.96</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43828</th>\n",
              "      <td>43829</td>\n",
              "      <td>2015</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>3.0</td>\n",
              "      <td>11.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>-21.0</td>\n",
              "      <td>27.0</td>\n",
              "      <td>1034.0</td>\n",
              "      <td>-5.0</td>\n",
              "      <td>NW</td>\n",
              "      <td>16.98</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43829</th>\n",
              "      <td>43830</td>\n",
              "      <td>2015</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>3.0</td>\n",
              "      <td>18.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>-22.0</td>\n",
              "      <td>23.0</td>\n",
              "      <td>1034.0</td>\n",
              "      <td>-4.0</td>\n",
              "      <td>NW</td>\n",
              "      <td>24.13</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43830</th>\n",
              "      <td>43831</td>\n",
              "      <td>2015</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>6</td>\n",
              "      <td>4</td>\n",
              "      <td>3.0</td>\n",
              "      <td>20.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>8.0</td>\n",
              "      <td>-23.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>1034.0</td>\n",
              "      <td>-5.0</td>\n",
              "      <td>NW</td>\n",
              "      <td>25.92</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43831</th>\n",
              "      <td>43832</td>\n",
              "      <td>2015</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "      <td>4</td>\n",
              "      <td>3.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>7.0</td>\n",
              "      <td>17.0</td>\n",
              "      <td>-22.0</td>\n",
              "      <td>26.0</td>\n",
              "      <td>1035.0</td>\n",
              "      <td>-6.0</td>\n",
              "      <td>SE</td>\n",
              "      <td>1.79</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43832</th>\n",
              "      <td>43833</td>\n",
              "      <td>2015</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>8</td>\n",
              "      <td>4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>11.0</td>\n",
              "      <td>-22.0</td>\n",
              "      <td>29.0</td>\n",
              "      <td>1035.0</td>\n",
              "      <td>-7.0</td>\n",
              "      <td>cv</td>\n",
              "      <td>0.89</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43833</th>\n",
              "      <td>43834</td>\n",
              "      <td>2015</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>9</td>\n",
              "      <td>4</td>\n",
              "      <td>5.0</td>\n",
              "      <td>37.0</td>\n",
              "      <td>11.0</td>\n",
              "      <td>33.0</td>\n",
              "      <td>-22.0</td>\n",
              "      <td>24.0</td>\n",
              "      <td>1035.0</td>\n",
              "      <td>-5.0</td>\n",
              "      <td>NE</td>\n",
              "      <td>1.79</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ade50529-4a4c-467d-a8b4-2655b083b1ca')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ade50529-4a4c-467d-a8b4-2655b083b1ca button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ade50529-4a4c-467d-a8b4-2655b083b1ca');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-4505c7e0-907e-4d35-8e44-aaddeb20c89c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4505c7e0-907e-4d35-8e44-aaddeb20c89c')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-4505c7e0-907e-4d35-8e44-aaddeb20c89c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df_Beijing",
              "summary": "{\n  \"name\": \"df_Beijing\",\n  \"rows\": 8760,\n  \"fields\": [\n    {\n      \"column\": \"No\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2528,\n        \"min\": 43825,\n        \"max\": 52584,\n        \"num_unique_values\": 8760,\n        \"samples\": [\n          49881,\n          49381,\n          49815\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 2015,\n        \"max\": 2015,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          2015\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 1,\n        \"max\": 12,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          11\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"day\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 1,\n        \"max\": 31,\n        \"num_unique_values\": 31,\n        \"samples\": [\n          28\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hour\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6,\n        \"min\": 0,\n        \"max\": 23,\n        \"num_unique_values\": 24,\n        \"samples\": [\n          8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"season\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 4,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PM_Dongsi\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 92.50421085507277,\n        \"min\": 3.0,\n        \"max\": 685.0,\n        \"num_unique_values\": 461,\n        \"samples\": [\n          27.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PM_Dongsihuan\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 91.85208267772026,\n        \"min\": 3.0,\n        \"max\": 671.0,\n        \"num_unique_values\": 441,\n        \"samples\": [\n          342.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PM_Nongzhanguan\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 91.1006750499881,\n        \"min\": 3.0,\n        \"max\": 667.0,\n        \"num_unique_values\": 446,\n        \"samples\": [\n          313.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PM_US Post\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 88.49291794783777,\n        \"min\": 1.0,\n        \"max\": 722.0,\n        \"num_unique_values\": 458,\n        \"samples\": [\n          240.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DEWP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.037508110882584,\n        \"min\": -30.0,\n        \"max\": 27.0,\n        \"num_unique_values\": 58,\n        \"samples\": [\n          -21.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HUMI\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26.014223159700745,\n        \"min\": 5.0,\n        \"max\": 100.0,\n        \"num_unique_values\": 87,\n        \"samples\": [\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PRES\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.431366641295416,\n        \"min\": 992.0,\n        \"max\": 1043.0,\n        \"num_unique_values\": 52,\n        \"samples\": [\n          1016.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TEMP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.560296727175531,\n        \"min\": -12.0,\n        \"max\": 40.0,\n        \"num_unique_values\": 53,\n        \"samples\": [\n          10.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cbwd\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"NW\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Iws\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 45.33000306920324,\n        \"min\": 0.45,\n        \"max\": 465.34,\n        \"num_unique_values\": 982,\n        \"samples\": [\n          453.73\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"precipitation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10975.65457729406,\n        \"min\": 0.0,\n        \"max\": 999990.0,\n        \"num_unique_values\": 50,\n        \"samples\": [\n          4.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Iprec\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10975.653423697511,\n        \"min\": 0.0,\n        \"max\": 999990.0,\n        \"num_unique_values\": 113,\n        \"samples\": [\n          15.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 2
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Forecast the 'PM' series, which are measurements of air pollution for several different districts. Note that there are occasional missing values in these series, which we can fill with simple linear interpolation. To start, we'll focus on the \"PM_Dongsi\" series and interpolate the missing values."
      ],
      "metadata": {
        "id": "iuPGmY45QO3T"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df_Beijing['PM_Dongsi'] = df_Beijing['PM_Dongsi'].interpolate()\n",
        "df_Beijing['PM_Dongsi'].head(10)"
      ],
      "metadata": {
        "id": "G1-UHhvTQNOp",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "4ae61c3f-e370-4182-bad4-ca0c29d2bd25"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "43824    5.0\n",
              "43825    4.0\n",
              "43826    3.0\n",
              "43827    4.0\n",
              "43828    3.0\n",
              "43829    3.0\n",
              "43830    3.0\n",
              "43831    3.0\n",
              "43832    4.0\n",
              "43833    5.0\n",
              "Name: PM_Dongsi, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Create a function to extract and plot the last *n* days of data"
      ],
      "metadata": {
        "id": "Tp724fxbQW6P"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def get_n_last_days(df, series_name, n_days):\n",
        "  \"\"\"\n",
        "  Extract last n_days of an hourly time series\n",
        "  \"\"\"\n",
        "  return df[series_name][-(24*n_days):]"
      ],
      "metadata": {
        "id": "52tZN6iqQcHP"
      },
      "execution_count": 5,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def plot_n_last_days(df, series_name, n_days):\n",
        "  \"\"\"\n",
        "  Plot last n_days of an hourly time series\n",
        "  \"\"\"\n",
        "  plt.plot(get_n_last_days(df, series_name, n_days), 'k-')\n",
        "  plt.title('{0} Air Quality Time Series - {1} days'.format(series_name, n_days))\n",
        "\n",
        "  plt.xlabel('Recorded Hour')\n",
        "  plt.ylabel('Reading')\n",
        "  plt.grid(alpha=0.3)"
      ],
      "metadata": {
        "id": "Cw_dMF-IQjZz"
      },
      "execution_count": 6,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Check last 6 weeks of data look like"
      ],
      "metadata": {
        "id": "UpsqQqo-Q1JP"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "plot_n_last_days(df_Beijing, 'PM_Dongsi', 42)"
      ],
      "metadata": {
        "id": "aVaUmMvaQ2q-",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 508
        },
        "outputId": "91848e7c-1122-471b-9d9d-4c57fde54a24"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Train a simple RNN to forecast the PM_Dongsi time series"
      ],
      "metadata": {
        "id": "qOo0Z02sQ49r"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def get_keras_format_series(series):\n",
        "  \"\"\"\n",
        "  Convert a series to a numpy array of shape\n",
        "  [n_samples, time_steps, features]\n",
        "  \"\"\"\n",
        "\n",
        "  series = np.array(series)\n",
        "  return series.reshape(series.shape[0], series.shape[1], 1)"
      ],
      "metadata": {
        "id": "_-30beCLQ37r"
      },
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def get_train_test_data(df, series_name, series_days, input_hours, test_hours, sample_gap=3):\n",
        "  \"\"\"\n",
        "  Utility processing function that splits an hourly time series into\n",
        "  train and test with keras-friendly format, according to user-specified\n",
        "  choice of shape.\n",
        "\n",
        "  arguments\n",
        "  ---------\n",
        "  df (dataframe): dataframe with time series columns\n",
        "  series_name (string): column name in df\n",
        "  series_days (int): total days to extract\n",
        "  input_hours (int): length of sequence input to network\n",
        "  test_hours (int): length of held-out terminal sequence\n",
        "  sample_gap (int): step size between start of train sequences; default 5\n",
        "\n",
        "  returns\n",
        "  ---------\n",
        "  tuple: train_X, test_X_init, train_y, test_y\n",
        "  \"\"\"\n",
        "\n",
        "  forecast_series = get_n_last_days(df, series_name, series_days).values\n",
        "\n",
        "  train = forecast_series[:-test_hours]\n",
        "  test = forecast_series[-test_hours:]\n",
        "\n",
        "  train_X, train_y = [], []\n",
        "\n",
        "  for i in range(0, train.shape[0]-input_hours, sample_gap):\n",
        "    train_X.append(train[i:i+input_hours])\n",
        "    train_y.append(train[i+input_hours])\n",
        "\n",
        "  train_X = get_keras_format_series(train_X)\n",
        "  train_y = np.array(train_y)\n",
        "\n",
        "  test_X_init = test[:input_hours]\n",
        "  test_y = test[input_hours:]\n",
        "\n",
        "  return train_X, test_X_init, train_y, test_y"
      ],
      "metadata": {
        "id": "XuZW_twdRC6d"
      },
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "With the get_train_test_data utility function in hand, we're all set to extract keras-friendly arrays and\n",
        "start training simple RNN models. We run this function in the cell below. We use the last 56 days of\n",
        "the PM_Dongsi series, and will train a model that takes in 12 time steps in order to predict the next\n",
        "time step. We use the last day of data for visually testing the model."
      ],
      "metadata": {
        "id": "cyPFVLmSRuMj"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "series_days = 56\n",
        "input_hours = 12\n",
        "test_hours = 24"
      ],
      "metadata": {
        "id": "m8w0QqfFRx0z"
      },
      "execution_count": 10,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "train_X, test_X_init, train_y, test_y = (get_train_test_data(df_Beijing,\n",
        "                                                             'PM_Dongsi',\n",
        "                                                             series_days,\n",
        "                                                             input_hours,\n",
        "                                                             test_hours))"
      ],
      "metadata": {
        "id": "E6YmgswbR0Ry"
      },
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Below we see that by taking multiple time slices, we get 436 training samples of 12 time steps each."
      ],
      "metadata": {
        "id": "8i9o_G84R7lG"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "print('Training shape: {}'.format(train_X.shape))"
      ],
      "metadata": {
        "id": "f4zTZ8b5R-EW",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ecc11597-decb-41bc-ab2a-3658ef0f10e3"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training shape: (436, 12, 1)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Train a simple RNN model using keras."
      ],
      "metadata": {
        "id": "4f2bwvjeSAZD"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def fit_SimpleRNN(train_X, train_y, cell_units, epochs):\n",
        "  \"\"\"\n",
        "  Fit Simple RNN to data train_X, train_y\n",
        "\n",
        "  arguments\n",
        "  ---------\n",
        "  train_X (array): input sequence samples for training\n",
        "  train_y (list): next step in sequence targets\n",
        "  cell_units (int): number of hidden units for RNN cells\n",
        "  epochs (int): number of training epochs\n",
        "  \"\"\"\n",
        "\n",
        "  # initialize model\n",
        "  model = Sequential()\n",
        "\n",
        "  # construct an RNN layer with specified number of hidden units\n",
        "  # per cell and desired sequence input format\n",
        "  model.add(SimpleRNN(cell_units, input_shape=(train_X.shape[1],1)))\n",
        "\n",
        "  # add an output layer to make final predictions\n",
        "  model.add(Dense(1))\n",
        "\n",
        "  # define the loss function / optimization strategy, and fit\n",
        "  # the model with the desired number of passes over the data (epochs)\n",
        "  model.compile(loss='mean_squared_error', optimizer='adam')\n",
        "  model.fit(train_X, train_y, epochs=epochs, batch_size=64, verbose=0)\n",
        "\n",
        "  return model"
      ],
      "metadata": {
        "id": "vaCvVrRHSABy"
      },
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Use this function to fit a very simple baseline model."
      ],
      "metadata": {
        "id": "RdfZD5MwSOMI"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "model = fit_SimpleRNN(train_X, train_y, cell_units=10, epochs=10)"
      ],
      "metadata": {
        "id": "WrlblNlrR_IV"
      },
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "This prediction method and a utility function for plotting its output against the ground truth are\n",
        "defined below."
      ],
      "metadata": {
        "id": "nisPsXOnSRrB"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def predict(X_init, n_steps, model):\n",
        "  \"\"\"\n",
        "  Given an input series matching the model's expected format,\n",
        "  generates model's predictions for next n_steps in the series\n",
        "  \"\"\"\n",
        "\n",
        "  X_init = X_init.copy().reshape(1,-1,1)\n",
        "  preds = []\n",
        "\n",
        "  # iteratively take current input sequence, generate next step pred,\n",
        "  # and shift input sequence forward by a step (to end with latest pred).\n",
        "  # collect preds as we go.\n",
        "  for _ in range(n_steps):\n",
        "    pred = model.predict(X_init)\n",
        "    preds.append(pred)\n",
        "    X_init[:,:-1,:] = X_init[:,1:,:]\n",
        "    X_init[:,-1,:] = pred\n",
        "\n",
        "  preds = np.array(preds).reshape(-1,1)\n",
        "  return preds"
      ],
      "metadata": {
        "id": "MuZkfsgLSQYh"
      },
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def predict_and_plot(X_init, y, model, title):\n",
        "  \"\"\"\n",
        "  Given an input series matching the model's expected format,\n",
        "  generates model's predictions for next n_steps in the series,\n",
        "  and plots these predictions against the ground truth for those steps\n",
        "\n",
        "  arguments\n",
        "  ---------\n",
        "  X_init (array): initial sequence, must match model's input shape\n",
        "  y (array): true sequence values to predict, follow X_init\n",
        "  model (keras.models.Sequential): trained neural network\n",
        "  title (string): plot title\n",
        "  \"\"\"\n",
        "\n",
        "  y_preds = predict(test_X_init, n_steps=len(y), model=model)\n",
        "\n",
        "  start_range = range(1, input_hours+1)\n",
        "  predict_range = range(input_hours, test_hours)\n",
        "\n",
        "  plt.plot(start_range, test_X_init)\n",
        "  plt.plot(predict_range, test_y, color='orange')\n",
        "  plt.plot(predict_range, y_preds, color='teal', linestyle='--')\n",
        "\n",
        "  plt.title(title)\n",
        "  plt.legend(['Initial Series','Target Series','Predictions'])"
      ],
      "metadata": {
        "id": "zd-hpX95Sb2-"
      },
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "predict_and_plot(test_X_init,\n",
        "                 test_y, model,\n",
        "                 'PM Series: Test Data and Simple RNN Predictions')"
      ],
      "metadata": {
        "id": "lsTdb55HSpup",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 687
        },
        "outputId": "6d0a5435-91c7-48d8-91c0-fefeb1a2aeda"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1/1 [==============================] - 0s 196ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 21ms/step\n",
            "1/1 [==============================] - 0s 19ms/step\n",
            "1/1 [==============================] - 0s 19ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 33ms/step\n",
            "1/1 [==============================] - 0s 22ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 19ms/step\n",
            "1/1 [==============================] - 0s 22ms/step\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Retrain the model a few times in order to get results that we're happy with."
      ],
      "metadata": {
        "id": "A-OkKjcFSuxu"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "model = fit_SimpleRNN(train_X, train_y, cell_units=30, epochs=1200)"
      ],
      "metadata": {
        "id": "3YzBFbW8SwV8"
      },
      "execution_count": 18,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "predict_and_plot(test_X_init,\n",
        "                 test_y, model,\n",
        "                 'PM Series: Test Data and Simple RNN Predictions')"
      ],
      "metadata": {
        "id": "3ZgVRmMyS2LA",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 687
        },
        "outputId": "5ec28f0f-f2fc-4378-a58e-08bf58f54919"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1/1 [==============================] - 0s 197ms/step\n",
            "1/1 [==============================] - 0s 30ms/step\n",
            "1/1 [==============================] - 0s 28ms/step\n",
            "1/1 [==============================] - 0s 28ms/step\n",
            "1/1 [==============================] - 0s 32ms/step\n",
            "1/1 [==============================] - 0s 34ms/step\n",
            "1/1 [==============================] - 0s 31ms/step\n",
            "1/1 [==============================] - 0s 31ms/step\n",
            "1/1 [==============================] - 0s 38ms/step\n",
            "1/1 [==============================] - 0s 29ms/step\n",
            "1/1 [==============================] - 0s 32ms/step\n",
            "1/1 [==============================] - 0s 28ms/step\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model.summary()"
      ],
      "metadata": {
        "id": "Ndd0xjueS287",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "00fcd1f6-5d75-42ba-8f48-9a2dc04b3d6c"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model: \"sequential_1\"\n",
            "_________________________________________________________________\n",
            " Layer (type)                Output Shape              Param #   \n",
            "=================================================================\n",
            " simple_rnn_1 (SimpleRNN)    (None, 30)                960       \n",
            "                                                                 \n",
            " dense_1 (Dense)             (None, 1)                 31        \n",
            "                                                                 \n",
            "=================================================================\n",
            "Total params: 991 (3.87 KB)\n",
            "Trainable params: 991 (3.87 KB)\n",
            "Non-trainable params: 0 (0.00 Byte)\n",
            "_________________________________________________________________\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### LSTM"
      ],
      "metadata": {
        "id": "uHhcZ7aeS8UM"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Write a new function for fitting an LSTM with keras"
      ],
      "metadata": {
        "id": "sDY0OD9zS-P2"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def fit_LSTM(train_X, train_y, cell_units, epochs):\n",
        "  \"\"\"\n",
        "  Fit LSTM to data train_X, train_y\n",
        "\n",
        "  arguments\n",
        "  ---------\n",
        "  train_X (array): input sequence samples for training\n",
        "  train_y (list): next step in sequence targets\n",
        "  cell_units (int): number of hidden units for LSTM cells\n",
        "  epochs (int): number of training epochs\n",
        "  \"\"\"\n",
        "\n",
        "  # initialize model\n",
        "  model = Sequential()\n",
        "\n",
        "  # construct a LSTM layer with specified number of hidden units\n",
        "  # per cell and desired sequence input format\n",
        "  model.add(LSTM(cell_units, input_shape=(train_X.shape[1],1)))\n",
        "\n",
        "  # add an output layer to make final predictions\n",
        "  model.add(Dense(1))\n",
        "\n",
        "  # define the loss function / optimization strategy, and fit\n",
        "  # the model with the desired number of passes over the data (epochs)\n",
        "  model.compile(loss='mean_squared_error', optimizer='adam')\n",
        "  model.fit(train_X, train_y, epochs=epochs, batch_size=64, verbose=0)\n",
        "\n",
        "  return model"
      ],
      "metadata": {
        "id": "Q7zQUnOPS_r0"
      },
      "execution_count": 21,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Train a LSTM to forecast the PM_Nongzhanguan time series"
      ],
      "metadata": {
        "id": "V-3JY8_7TK3J"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "series_days = 50\n",
        "input_hours = 12\n",
        "test_hours = 96"
      ],
      "metadata": {
        "id": "iQvntG8OTM0e"
      },
      "execution_count": 22,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "train_X, test_X_init, train_y, test_y = (get_train_test_data(df_Beijing,\n",
        "                                                             'PM_Nongzhanguan',\n",
        "                                                             series_days,\n",
        "                                                             input_hours,\n",
        "                                                             test_hours))"
      ],
      "metadata": {
        "id": "ulQBwaKmTOdl"
      },
      "execution_count": 23,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model = fit_LSTM(train_X, train_y, cell_units=70, epochs=3000)"
      ],
      "metadata": {
        "id": "ODyoRlh2TZGA"
      },
      "execution_count": 24,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "predict_and_plot(test_X_init,\n",
        "                 test_y, model,\n",
        "                 'PM_Nongzhanguan Series: Test Data and LSTM Predictions')"
      ],
      "metadata": {
        "id": "TWk83oO9TaVG",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "0245896c-e0d1-4164-f62b-f90789b2618a"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1/1 [==============================] - 0s 383ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 21ms/step\n",
            "1/1 [==============================] - 0s 21ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 19ms/step\n",
            "1/1 [==============================] - 0s 21ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 26ms/step\n",
            "1/1 [==============================] - 0s 19ms/step\n",
            "1/1 [==============================] - 0s 21ms/step\n",
            "1/1 [==============================] - 0s 22ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 21ms/step\n",
            "1/1 [==============================] - 0s 33ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 22ms/step\n",
            "1/1 [==============================] - 0s 22ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 21ms/step\n",
            "1/1 [==============================] - 0s 21ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 19ms/step\n",
            "1/1 [==============================] - 0s 21ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 22ms/step\n",
            "1/1 [==============================] - 0s 29ms/step\n",
            "1/1 [==============================] - 0s 24ms/step\n",
            "1/1 [==============================] - 0s 21ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 23ms/step\n",
            "1/1 [==============================] - 0s 21ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 21ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 21ms/step\n",
            "1/1 [==============================] - 0s 21ms/step\n",
            "1/1 [==============================] - 0s 21ms/step\n",
            "1/1 [==============================] - 0s 21ms/step\n",
            "1/1 [==============================] - 0s 21ms/step\n",
            "1/1 [==============================] - 0s 31ms/step\n",
            "1/1 [==============================] - 0s 21ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 22ms/step\n",
            "1/1 [==============================] - 0s 24ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 21ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 21ms/step\n",
            "1/1 [==============================] - 0s 21ms/step\n",
            "1/1 [==============================] - 0s 21ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 30ms/step\n",
            "1/1 [==============================] - 0s 21ms/step\n",
            "1/1 [==============================] - 0s 21ms/step\n",
            "1/1 [==============================] - 0s 21ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 21ms/step\n",
            "1/1 [==============================] - 0s 22ms/step\n",
            "1/1 [==============================] - 0s 21ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 21ms/step\n",
            "1/1 [==============================] - 0s 21ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 22ms/step\n",
            "1/1 [==============================] - 0s 23ms/step\n",
            "1/1 [==============================] - 0s 28ms/step\n",
            "1/1 [==============================] - 0s 21ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 21ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 22ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n",
            "1/1 [==============================] - 0s 19ms/step\n",
            "1/1 [==============================] - 0s 20ms/step\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model.summary()"
      ],
      "metadata": {
        "id": "g4hWyG9RTcoc",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "28013ee0-c87d-47c4-da0c-43d954295c8d"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model: \"sequential_2\"\n",
            "_________________________________________________________________\n",
            " Layer (type)                Output Shape              Param #   \n",
            "=================================================================\n",
            " lstm (LSTM)                 (None, 70)                20160     \n",
            "                                                                 \n",
            " dense_2 (Dense)             (None, 1)                 71        \n",
            "                                                                 \n",
            "=================================================================\n",
            "Total params: 20231 (79.03 KB)\n",
            "Trainable params: 20231 (79.03 KB)\n",
            "Non-trainable params: 0 (0.00 Byte)\n",
            "_________________________________________________________________\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Supplementary Activity"
      ],
      "metadata": {
        "id": "MxFZBNJBTedu"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "* Train your own model to forecast the \"PM_Nongzhanguan\" series from the Beijing dataframe.\n",
        "* Train a LSTM to forecast the PM_Dongsi time series"
      ],
      "metadata": {
        "id": "wd7WH7LeThHA"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Conclusion"
      ],
      "metadata": {
        "id": "1OtIOm9nTlgQ"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "*Conclusion*"
      ],
      "metadata": {
        "id": "F4UcNHpeTpCi"
      }
    }
  ]
}